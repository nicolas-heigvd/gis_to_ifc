# Created on Fri Nov 10 14:08:00 2024
# Copyright (C) 2024-present {nicolas.blanc} @ HEIG-VD
# This file is licensed under the GPL-3.0-only. See LICENSE file for details.
# Third-party libraries and their licenses are listed in the NOTICE.md file.

name: "Build and Push Docker Image"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  ENV: prod
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
    - name: "Checkout repository"
      uses: actions/checkout@v4

    - name: "Docker Login"
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: "Extract metadata (tags, labels) for Docker"
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: "Set up QEMU"
      uses: docker/setup-qemu-action@v3

    - name: "Set up Docker Buildx"
      uses: docker/setup-buildx-action@v3

    - name: "Build and push Docker image"
      id: push
      uses: docker/build-push-action@v6
      with:
        platforms: linux/amd64
        context: .
        push: true
        target: ${{ env.ENV }}
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        labels: ${{ steps.meta.outputs.labels }}

    - name: "Generate artifact attestation"
      id: attest
      uses: actions/attest-build-provenance@v2
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true

    - name: "Set Repository Name Variable"
      run: |
        echo
        echo "REPOSITORY_NAME=${GITHUB_REPOSITORY##*/}" >> "$GITHUB_ENV"

    - name: "Clean up Previous Images"
      uses: actions/delete-package-versions@v5
      with:
        owner: ${{ github.repository_owner }}
        package-type: container
        package-name: ${{ env.REPOSITORY_NAME }}
        min-versions-to-keep: 5
        token: ${{ secrets.GITHUB_TOKEN }}
